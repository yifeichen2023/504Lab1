[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html#quarto",
    "href": "posts/post-with-code/index.html#quarto",
    "title": "Yifei Chen",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n1+1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "YC’s post",
    "section": "",
    "text": "Lab: Logistic Regression\n\n\nPrinceton University\n\n\n\n\n\n\n\n\nYifei Chen\n\n\n\n\n\n\n\n\n\n\n\n\nLab: Ordinal Regression\n\n\nPrinceton University\n\n\n\n\n\n\n\n\nYifei Chen\n\n\n\n\n\n\n\n\n\n\n\n\nLab 5 - Poisson - Questions\n\n\n\n\n\n\n\n\n\n\n\nMar 10, 2025\n\n\nYifei Chen\n\n\n\n\n\n\n\n\n\n\n\n\nLab 4 - Multinomial Regression - Questions\n\n\n\n\n\n\n\n\n\n\n\nFeb 28, 2025\n\n\nYifei Chen\n\n\n\n\n\n\n\n\n\n\n\n\nYifei Chen\n\n\n\n\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 5, 2025\n\n\nYifei Chen\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 2, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html",
    "title": "Lab: Logistic Regression",
    "section": "",
    "text": "Assignment requirements:\n\nIf you are using Github (recommended), make sure to commit and push your work to GitHub regularly, at least after each exercise. Write short and informative commit messages, and share the link to your assignment with me. If not, you can also send me the rmd & rendered file via Canvas.\nIn this assignment, you will not need to code from scratch. Rather, you’ll need to fill in code where needed. This assignment has a logisitic regression implementation for a scenario from EDA down to model comparison (and would be useful for whenever you may encounter such a situation in the future).\nI want the assignments to begin reflecting a bit more of how you’d be doing things on your own, where you have some prior knowledge and you figure other things out (by referring to documentation, etc.) . In addition to the rmd, I also want you to submit to me notes of anything new that you learn while finishing the assignment. And any pain-points, and we’ll discuss more.\n\nNote:\n\nIf you are fitting a model, display the model output in a neatly formatted table. (The gt tidy and kable functions can help!). Modelsummary also looks good(https://vincentarelbundock.github.io/modelsummary/articles/modelsummary.html)\nMake sure that your plots are clearly labeled – for all axes, titles, etc."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#data-general-social-survey",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#data-general-social-survey",
    "title": "Lab: Logistic Regression",
    "section": "Data: General Social Survey",
    "text": "Data: General Social Survey\nThe General Social Survey (GSS) has been used to measure trends in attitudes and behaviors in American society since 1972. In addition to collecting demographic information, the survey includes questions used to gauge attitudes about government spending priorities, confidence in institutions, lifestyle, and many other topics. A full description of the survey may be found here.\nThe data for this lab are from the 2016 General Social Survey. The original data set contains 2867 observations and 935 variables. We will use and abbreviated data set that includes the following variables:\nnatmass: Respondent’s answer to the following prompt:\n“We are faced with many problems in this country, none of which can be solved easily or inexpensively. I’m going to name some of these problems, and for each one I’d like you to tell me whether you think we’re spending too much money on it, too little money, or about the right amount…are we spending too much, too little, or about the right amount on mass transportation?”\nage: Age in years.\nsex: Sex recorded as male or female\nsei10: Socioeconomic index from 0 to 100\nregion: Region where interview took place\npolviews: Respondent’s answer to the following prompt:\n“We hear a lot of talk these days about liberals and conservatives. I’m going to show you a seven-point scale on which the political views that people might hold are arranged from extremely liberal - point 1 - to extremely conservative - point 7. Where would you place yourself on this scale?”\nThe data are in gss2016.csv in the data folder."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#eda",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#eda",
    "title": "Lab: Logistic Regression",
    "section": "EDA",
    "text": "EDA\n\nLet’s begin by making a binary variable for respondents’ views on spending on mass transportation. Create a new variable that is equal to “1” if a respondent said spending on mass transportation is about right and “0” otherwise. Then plot the proportion of the response variable, using informative labels for each category.\n\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(modelsummary)\nlibrary(tidyr)\nlibrary(knitr)\nlibrary(easystats)\nlibrary(broom)\nlibrary(emmeans)\nlibrary(marginaleffects)\nlibrary(performance)\nlibrary(arm)\nlibrary(modelsummary)\n\n\n\n\nCode\n# load data\ndata &lt;- read.csv(\"gss2016.csv\")\n\n\nFill in the “____” below to encode the binary variable\n\n\nCode\ndata &lt;- data %&gt;%\n   mutate(mass_trans_spend_right = ifelse(natmass == 'About right', 1, 0))\n\n\n\n\nCode\n#Get proportions\nmass_spend_summary &lt;- data %&gt;%\n  count(mass_trans_spend_right) %&gt;%\n  mutate(proportion = n / sum(n))\n\n#Look at the dataframe structure. And make sure it's in a format that you can use for plotting.\n#Change structure if neederd\nmass_spend_long &lt;- mass_spend_summary\n\n#Factorise for plot\nmass_spend_summary$mass_trans_spend_right &lt;- as.factor(mass_spend_summary$mass_trans_spend_right)\n\n# Step 3: Create the bar chart\nggplot(mass_spend_summary, aes(x = \"\", y = proportion, fill = mass_trans_spend_right)) +\n  geom_bar(stat = \"identity\") +  # Use identity to plot the actual proportions\n  labs(x = \"\", y = \"Proportion\", fill = \"Perception of Spending\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nRecode polviews so it is a factor with levels that are in an order that is consistent with question on the survey. Note how the categories are spelled in the data.\n\n\n\nCode\ndata &lt;- data %&gt;%\n  mutate(polviews = factor(polviews,\n                           levels = c(\"Extremely liberal\", \"Liberal\", \"Slightly liberal\", \"Moderate\", \"Slghtly conservative\", \"Conservative\", \"Extrmly conservative\"),\n                           ordered = TRUE))\n\n\n\nMake a plot of the distribution of polviews\n\n\n\nCode\nggplot(data, aes(x = polviews)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\n\nWhich political view occurs most frequently in this data set?\nModerate\n\n\nMake a plot displaying the relationship between satisfaction with mass transportation spending and political views. Use the plot to describe the relationship the two variables.\n\n\n\nCode\nggplot(data, aes(x = mass_trans_spend_right, fill = polviews)) +\n  geom_bar(position = \"fill\") +  # Position \"fill\" normalizes the bar height to 100%\n  labs(x = \"Satisfaction with Mass Transit Spending\", \n       y = \"Proportion\", \n       fill = \"Political Views\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::percent) +  # Show y-axis as percentage\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if necessary\n\n\n\n\n\n\n\n\n\nThe more conservative one’s political views are the more they think the amount of spending on mass transportation is correct.\n\nWe’d like to use age as a quantitative variable in your model; however, it is currently a character data type because some observations are coded as “89 or older”.\n\n\nRecode age so that is a numeric variable. Note: Before making the variable numeric, you will need to replace the values “89 or older” with a single value.\n\n\n\nCode\ndata &lt;- data %&gt;%\n  mutate(age = if_else(age == \"89 or older\", \"89\", age), \n         age = as.numeric(age))\n\n\n\nPlot the frequency distribution of age.\n\n\n\nCode\nggplot(data, aes(x = age)) +\n  geom_histogram()"
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#logistic-regression",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#logistic-regression",
    "title": "Lab: Logistic Regression",
    "section": "Logistic regression",
    "text": "Logistic regression\n\nLet’s start by fitting a logistic regression model with just the intercept\n\n\n\nCode\nintercept_only_model &lt;- glm(\n  mass_trans_spend_right ~ 1,  \n  data = data,  \n  family = binomial()  \n)\n\nintercept_only_model %&gt;% \n  tidy() %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n0.1190594\n0.0393685\n3.024229\n0.0024927\n\n\n\n\n\n\nInterpret the intercept in the context of the data. You can do this by converting the \\(\\beta_0\\) parameter out of the log-odds metric to the probability metric. Make sure to include the 95% confidence intervals. Then interpret the results in a sentence or two–what is the basic thing this probability tells us about?\n\n\n\nCode\nb0 &lt;- coef(intercept_only_model)[1] \n\nb0_transformed &lt;- exp(b0) / (1 + exp(b0)) \n\nci_lower = b0 - 1.96 * 0.0393685 \nci_upper = b0 + 1.96 * 0.0393685\n\np_lower = exp(ci_lower) / (1 + exp(ci_lower))\np_upper = exp(ci_upper) / (1 + exp(ci_upper)) \n\nc(b0, ci_lower, ci_upper)\n\n\n(Intercept) (Intercept) (Intercept) \n  0.1190594   0.0418971   0.1962216 \n\n\nInterpretation: There are more people who are satisfied with the mass transportation than not satisfy.\n\nNow let’s fit a model using the demographic factors - age,sex, sei10 - to predict the odds a person is satisfied with spending on mass transportation. Make any necessary adjustments to the variables so the intercept will have a meaningful interpretation. Neatly display the model coefficients (do not display the summary output)\n\n\n\nCode\n#make sure that sex is a factor (i.e. to make sure R knows it's binary/categorical, and not continuous)\ndata$sex &lt;- factor(data$sex, levels = c(\"Male\", \"Female\")) \n\n#fit with glm()\nmodel &lt;- glm(mass_trans_spend_right ~ age + sex + sei10, \n             data = data, \n             family = binomial()) \n\n#produce tidy output of model coefficients\nmodel %&gt;%\n  tidy() %&gt;%\n  kable() \n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n0.5697071\n0.1409061\n4.043169\n0.0000527\n\n\nage\n-0.0061659\n0.0022824\n-2.701502\n0.0069027\n\n\nsexFemale\n0.2557439\n0.0798020\n3.204732\n0.0013519\n\n\nsei10\n-0.0062271\n0.0016609\n-3.749229\n0.0001774\n\n\n\n\n\n\nConsider the relationship between sex and one’s opinion about spending on mass transportation. Interpret the coefficient of sex in terms of the logs odds and OR of being satisfied with spending on mass transportation. What are the predicted probabilities for males and females on support for spending on mass transportation? Please include the 95% CIs around each estimate.\n\n\n\nCode\nm1 &lt;- glm(mass_trans_spend_right ~ sex, \n             data = data, \n             family = binomial()) \n\nm1 %&gt;% \n  tidy() %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-0.0254467\n0.0582517\n-0.4368402\n0.6622272\n\n\nsexFemale\n0.2661485\n0.0791791\n3.3613499\n0.0007756\n\n\n\n\n\nCode\nm1 %&gt;% \n  tidy(exponentiate = TRUE) %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n0.9748744\n0.0582517\n-0.4368402\n0.6622272\n\n\nsexFemale\n1.3049289\n0.0791791\n3.3613499\n0.0007756\n\n\n\n\n\nCode\nbsex &lt;- coef(m1)[\"sexFemale\"]\n\nci_lower_lo = bsex - 1.96 * 0.0791791\nci_upper_lo = bsex + 1.96 * 0.0791791\n\nci_lower_or = 1.29 - 1.96 * 0.0791791\nci_upper_or = 1.29 + 1.96 * 0.0791791\n\nemm_sex &lt;- emmeans(m1, \"sex\", type = \"response\")\nprint(c(bsex, ci_lower_or, ci_upper_or))\n\n\nsexFemale                     \n0.2661485 1.1348090 1.4451910 \n\n\nIf you did this right, you’ll find that being female (as compared to male) is associated with an increase in the log-odds of being satisfied with spending on mass transportation by 0.2557439 units (95% CI [0.09, 0.41]), holding all other variables constant. This equates to the odds of thinking the spending amount is right in females being 1.29 times the odds of thinking this in men (95% CI [1.13, 1.44]).\nThe predicted probability for females to be satisfied with spending on mass transportation is 55.9% (95% CI [53.3%, 58.5%]) and that of males is 49.5% (95% CI [46.7%, 52.4%]).\n\nVerify this.\n\nNext, consider the relationship between age and one’s opinion about spending on mass transportation. Interpret the coefficient of age in terms of the logs odds and OR of being satisfied with spending on mass transportation. Please include the 95% CIs around each estimate.\n\n\n\nCode\nm2 &lt;- glm(mass_trans_spend_right ~ age, \n             data = data, \n             family = binomial()) \n\nm2 %&gt;% \n  tidy() %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n0.4540298\n0.1171726\n3.874879\n0.0001067\n\n\nage\n-0.0068425\n0.0022513\n-3.039332\n0.0023710\n\n\n\n\n\nCode\nm2 %&gt;% \n  tidy(exponentiate = TRUE) %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n1.5746449\n0.1171726\n3.874879\n0.0001067\n\n\nage\n0.9931809\n0.0022513\n-3.039332\n0.0023710\n\n\n\n\n\nCode\nbage &lt;- coef(m2)[\"age\"]\n\nci_lower_lo = bage - 1.96 * 0.0022513   \nci_upper_lo = bage + 1.96 * 0.0022513   \n\nci_lower_or = exp(ci_lower_lo)\nci_upper_or = exp(ci_upper_lo)\n\nemm_age &lt;- emmeans(m2, \"age\", type = \"response\")\nprint(c(ci_lower_or, ci_upper_or))\n\n\n      age       age \n0.9888081 0.9975730 \n\n\nA one unit increase in age is associated with a decrease in the log-odds of being satisfied with spending on mass transportation by 0.0068425, holding all other variables constant. The odds ratio is 0.9931809 which confirms the negative relationship implied by the log-odds coefficient. Specifically, for each additional unit of age, the odds of being satisfied with mass transportation spending decrease by a factor of about 0.9931809, or approximately 0.068425% per unit increase in age, holding other factors constant.\n\nConsider the relationship between SES and one’s opinion about spending on mass transportation. Interpret the coefficient of SES in terms of the logs odds and OR of being satisfied with spending on mass transportation. Please include the 95% CIs around each estimate. ß\n\n\n\nCode\nm3 &lt;- glm(mass_trans_spend_right ~ sei10, \n             data = data, \n             family = binomial()) \n\nm3 %&gt;% \n  tidy() %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n0.4458859\n0.0855874\n5.209716\n2.00e-07\n\n\nsei10\n-0.0070782\n0.0016410\n-4.313488\n1.61e-05\n\n\n\n\n\nCode\nm3 %&gt;% \n  tidy(exponentiate = TRUE) %&gt;%\n  kable()\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n1.5618733\n0.0855874\n5.209716\n2.00e-07\n\n\nsei10\n0.9929468\n0.0016410\n-4.313488\n1.61e-05\n\n\n\n\n\nCode\nbsei &lt;- coef(m3)[\"sei10\"]\nsei_se &lt;- summary(m3)$coefficients[\"sei10\", \"Std. Error\"]\n\nci_lower_lo = bsei - 1.96 * sei_se\nci_upper_lo = bsei + 1.96 * sei_se\n\nci_lower_or = exp(ci_lower_lo)\nci_upper_or = exp(ci_upper_lo)\n\nemm_age &lt;- emmeans(m3, \"sei10\", type = \"response\")\nprint(c(ci_lower_lo, ci_upper_lo, ci_lower_or, ci_upper_or))\n\n\n       sei10        sei10        sei10        sei10 \n-0.010294507 -0.003861966  0.989758300  0.996145482 \n\n\nA one unit increase in SES index is associated with a decrease in the log-odds of being satisfied with spending on mass transportation by 0.0070782 units (95% CI [-0.010294507, -0.003861966]), holding all other variables constant. The odds ratio is less than 1 (0.9929468), which confirms the negative relationship implied by the log-odds coefficient. Specifically, for each additional unit of SES index, the odds of being satisfied with mass transportation spending decrease by a factor of about 0.9929468, or approximately 0.7% per unit increase in SES index, holding other factors constant (95% CI [0.989758300, 0.996145482])."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#marginal-effects",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#marginal-effects",
    "title": "Lab: Logistic Regression",
    "section": "Marginal effects",
    "text": "Marginal effects\n\nLet’s examine the results on the probability scale.\n\n\nCalculate the marginal effects of sex, age, and SES on mass transportation spending. You can use the margins package function margins discussed in your textbook or you can use the marginaleffects package avg_slope avg_comparisons discussed in lecture. Interpret each estimate.\n\n\n\nCode\n# sex \navg_comparisons(m1, comparison = \"difference\") %&gt;% \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\ncontrast\nestimate\nstd.error\nstatistic\np.value\ns.value\nconf.low\nconf.high\npredicted_lo\npredicted_hi\npredicted\n\n\n\n\nsex\nFemale - Male\n0.0662479\n0.0196632\n3.369125\n0.0007541\n10.37301\n0.0277087\n0.1047872\n0.4936387\n0.5598866\n0.4936387\n\n\n\n\n\nCode\n# age\navg_comparisons(m2, comparison = \"difference\") %&gt;% \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\ncontrast\nestimate\nstd.error\nstatistic\np.value\ns.value\nconf.low\nconf.high\npredicted_lo\npredicted_hi\npredicted\n\n\n\n\nage\n+1\n-0.0016988\n0.0005551\n-3.06054\n0.0022094\n8.82214\n-0.0027867\n-0.0006109\n0.5330603\n0.5313568\n0.5330603\n\n\n\n\n\nCode\n# sei\navg_comparisons(m3, comparison = \"difference\") %&gt;% \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\ncontrast\nestimate\nstd.error\nstatistic\np.value\ns.value\nconf.low\nconf.high\npredicted_lo\npredicted_hi\npredicted\n\n\n\n\nsei10\n+1\n-0.0017509\n0.0004002\n-4.375513\n1.21e-05\n16.33288\n-0.0025352\n-0.0009666\n0.456041\n0.4542857\n0.456041\n\n\n\n\n\n\nThe marginal effect of age is -0.0016988 (95% CI [-0.0027867, -0.0006109]). So, for each additional unit increase of age, the probability of being satisfied with mass transportation spending decreases by approximately 0.17 percentage points, holding other factors constant (p = 0.0022094).\nThe marginal effect of SES is -0.0017509 (95% CI [-0.0025352, -0.0009666]). For each one-unit increase in the socioeconomic index, the probability of being satisfied with mass transportation spending decreases by approximately 0.18 percentage points, holding other variables constant.\nThe marginal effect for being female compared to male is 0.0662479 (95% CI [0.0277087, 0.1047872]). This indicates that females are, on average, about 6.6 percentage points more likely than males to be satisfied with mass transportation spending, holding other factors constant."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#model-comparison",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#model-comparison",
    "title": "Lab: Logistic Regression",
    "section": "Model comparison",
    "text": "Model comparison\n\nNow let’s see whether a person’s political views has a significant impact on their odds of being satisfied with spending on mass transportation, after accounting for the demographic factors.\n\n\nConduct a drop-in-deviance/likelihood ratio test to determine if polviews is a significant predictor of attitude towards spending on mass transportation. Name these two models fit2 and fit3, respectively. Compare the two models.\n\n\n\nCode\nfit2 &lt;- glm(mass_trans_spend_right ~ sex + age + sei10, \n            data = data, \n            family = binomial())\n\nfit3 &lt;- glm(mass_trans_spend_right ~ sex + age + sei10 + polviews, \n            data = data, \n            family = binomial())\n\ntest_likelihoodratio(fit2, fit3) %&gt;% kable()\n\n\n\n\n\n\nName\nModel\ndf\ndf_diff\nChi2\np\n\n\n\n\nfit2\nfit2\nglm\n4\nNA\nNA\nNA\n\n\nfit3\nfit3\nglm\n10\n6\n63.02844\n0\n\n\n\n\n\n\nIs the model with polviews better than the model without?\n\n\nYes."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#visualization",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#visualization",
    "title": "Lab: Logistic Regression",
    "section": "Visualization",
    "text": "Visualization\n\nLet’s plot the results\nWe next use the model to produce visualizations:\n\nGiven the code below, interpet what is being plotted:\n\npol_plot : ____\nsex_plot : ____\nses_plot: ___\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nadjust the various settings in your plot to make it look professional.\nYou can use ggeffects to get the predicted probabilities for these models.\n\n\n\n\n\n\nCode\nlibrary(ggeffects)\n\n\ncolors &lt;- c(\"Extremely liberal\" = \"black\",\n            \"Liberal\" = \"#0e2f44\",  # Dark blue\n            \"Slightly liberal\" = \"#1d5a6c\",  # Less dark blue\n            \"Moderate\" = \"#358ca3\",  # Medium blue\n            \"Slghtly conservative\" = \"#71b9d1\",  # Light blue\n            \"Conservative\" = \"#a6dcef\",  # Lighter blue\n            \"Extrmly conservative\" = \"#d0f0fd\")  # Very light blue\n\npp_pol &lt;- ggemmeans(fit3, terms = c(\"polviews\"))\n\n# Adjusted plot with gradient colors\npol_plot &lt;- ggplot(pp_pol, aes(x = x, y = predicted, color = x)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +\n  scale_color_manual(values = colors) +\n  labs(title = \"Effect of Political Views on Satisfaction with Mass Transportation\",\n       x = \"Political Views\", y = \"Predicted Probability\",\n       color = \"Political Views\") +\n  theme_minimal()\n\npol_plot\n\n\n\n\n\n\n\n\n\nCode\npp_sex &lt;- ggemmeans(fit3, terms = c(\"sex\"))\n\nsex_plot &lt;- ggplot(pp_sex, aes(x = x, y = predicted, color = x)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +\n  labs(title = \"Effect of Sex on Satisfaction with Mass Transportation\",\n       x = \"Sex\", y = \"Predicted Probability\",\n       color = \"Sex\") +\n  theme_minimal()\n\npp_sex\n\n\n# Predicted probabilities of mass_trans_spend_right\n\nsex    | Predicted |     95% CI\n-------------------------------\nMale   |      0.48 | 0.44, 0.51\nFemale |      0.55 | 0.51, 0.58\n\nAdjusted for:\n*   age = 48.90\n* sei10 = 46.07\n\n\nCode\npp_ses &lt;- ggemmeans(fit3, terms = \"sei10\")\n\n\nses_plot &lt;-  ggplot(pp_ses, aes(x = x, y = predicted)) +\n  geom_line(color = \"#2c7fb8\", size = 1) + \n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill = \"#2c7fb8\", alpha = 0.2) +  # Add a confidence interval band\n  labs(title = \"Effect of SES on Satisfaction with Mass Transportation\",\n       x = \"Socioeconomic Status\", y = \"Predicted Probability\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")  \nses_plot"
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#model-assumptions",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#model-assumptions",
    "title": "Lab: Logistic Regression",
    "section": "Model Assumptions",
    "text": "Model Assumptions\n\nIs the logistic model a good choice for this data?\n\n\n\nCode\nbinned_residuals(fit2)\n\n\nWarning: About 86% of the residuals are inside the error bounds (~95% or higher would be good).\n\n\n\n\n\n\n\n\nNote\n\n\n\nAnswer: It is below 95%, so not really a good choice."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#model-fit",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#model-fit",
    "title": "Lab: Logistic Regression",
    "section": "Model fit",
    "text": "Model fit\n\nCalculate the \\(R^2\\) for this model\n\n\n\nCode\nr2_mcfadden(fit2)\n\n\n# R2 for Generalized Linear Regression\n       R2: 0.010\n  adj. R2: 0.009\n\n\n\nR2 interpretation: Only one percent of the variation is accounted by the model, so not a good model.\nNext, Take a look at the binned residual plots for each continuous predictor variable and look at linearity. Is there a predictor that sticks out? What can we do to improve model fit in this case?\n\n\n\nCode\nbinned_residuals(fit2, term=\"sei10\")\n\n\nWarning: About 88% of the residuals are inside the error bounds (~95% or higher would be good).\n\n\nCode\nbinned_residuals(fit2, term=\"age\")\n\n\nOk: About 98% of the residuals are inside the error bounds.\n\n\nCode\nbinned_residuals(fit2, term=\"sei10\") %&gt;% plot(show_dots=TRUE)\n\n\n\n\n\n\n\n\n\nCode\nbinned_residuals(fit2, term=\"age\") %&gt;% plot(show_dots=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe sei10 doesn’t seems to be a good predictors since there are more residuals that fall outside of the error bounds and the residuals look less random compared to age. Perhaps transforming the sei10 values can help to make the residuals look more random/less systematic."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#testing-polviews",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#testing-polviews",
    "title": "Lab: Logistic Regression",
    "section": "Testing Polviews",
    "text": "Testing Polviews\n\n\nCode\nemmeans(fit3, \"polviews\") %&gt;% pairs() %&gt;% as.data.frame() %&gt;% filter(p.value &lt; .05)\n\n\n contrast                                   estimate        SE  df z.ratio\n Extremely liberal - Moderate             -0.9266262 0.1950664 Inf  -4.750\n Extremely liberal - Slghtly conservative -0.8487137 0.2127293 Inf  -3.990\n Extremely liberal - Conservative         -0.9935486 0.2108369 Inf  -4.712\n Extremely liberal - Extrmly conservative -1.3402621 0.2792876 Inf  -4.799\n Liberal - Moderate                       -0.7090022 0.1308520 Inf  -5.418\n Liberal - Slghtly conservative           -0.6310897 0.1555805 Inf  -4.056\n Liberal - Conservative                   -0.7759246 0.1532081 Inf  -5.065\n Liberal - Extrmly conservative           -1.1226380 0.2392048 Inf  -4.693\n Slightly liberal - Extrmly conservative  -0.7334002 0.2412625 Inf  -3.040\n p.value\n  &lt;.0001\n  0.0013\n  0.0001\n  &lt;.0001\n  &lt;.0001\n  0.0010\n  &lt;.0001\n  0.0001\n  0.0382\n\nResults are averaged over the levels of: sex \nResults are given on the log odds ratio (not the response) scale. \nP value adjustment: tukey method for comparing a family of 7 estimates \n\n\nCode\nemmeans(fit3, \"polviews\", type=\"response\") %&gt;% pairs() %&gt;% as.data.frame() %&gt;% filter(p.value &lt; .05)\n\n\n contrast                                 odds.ratio         SE  df null\n Extremely liberal / Moderate              0.3958871 0.07722426 Inf    1\n Extremely liberal / Slghtly conservative  0.4279651 0.09104070 Inf    1\n Extremely liberal / Conservative          0.3702605 0.07806458 Inf    1\n Extremely liberal / Extrmly conservative  0.2617771 0.07311109 Inf    1\n Liberal / Moderate                        0.4921350 0.06439684 Inf    1\n Liberal / Slghtly conservative            0.5320118 0.08277063 Inf    1\n Liberal / Conservative                    0.4602780 0.07051835 Inf    1\n Liberal / Extrmly conservative            0.3254202 0.07784206 Inf    1\n Slightly liberal / Extrmly conservative   0.4802732 0.11587191 Inf    1\n z.ratio p.value\n  -4.750  &lt;.0001\n  -3.990  0.0013\n  -4.712  0.0001\n  -4.799  &lt;.0001\n  -5.418  &lt;.0001\n  -4.056  0.0010\n  -5.065  &lt;.0001\n  -4.693  0.0001\n  -3.040  0.0382\n\nResults are averaged over the levels of: sex \nP value adjustment: tukey method for comparing a family of 7 estimates \nTests are performed on the log odds ratio scale \n\n\n\nConservatives are 1/0.3702605 and 1/0.4602780 times more likely to support mass transit spending compared to extremely liberal and liberal\nExtreme liberals are 0.3702605, 0.3958871, and 0.4279651 times more likely to support spending compared to conservatives, moderates and slight conservatives\nExtrm conservatives are 1/0.3254202 and 1/0.4802732 times more likely to support mass spending than liberals and slight liberals\nLiberals are 0.4921350 and 0.5320118 times more likely to support spending than moderates and slight conservatives."
  },
  {
    "objectID": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#conclusion",
    "href": "posts/Lab_Logistic_Regression/Lab: Logistic Regression.html#conclusion",
    "title": "Lab: Logistic Regression",
    "section": "Conclusion",
    "text": "Conclusion\nPolitical view is probably the best predictor in our case since the data itself falls more into a logistic regression patterns compared to sex, where things are binary and not continuous, and socioeconomic status, where things are linear based on the model summary below, and the three figures.\n\n\n\n\nDf\nDeviance\nResid. Df\nResid. Dev\nPr(&gt;Chi)\n\n\n\n\nNULL\nNA\nNA\n2589\n3581.340\nNA\n\n\nsex\n1\n11.31903\n2588\n3570.021\n0.0007672\n\n\nage\n1\n10.10603\n2587\n3559.915\n0.0014778\n\n\nsei10\n1\n14.11908\n2586\n3545.796\n0.0001716\n\n\npolviews\n6\n63.02844\n2580\n3482.768\n0.0000000\n\n\n\nTable 1\n\n\n\n\n\nFigure 1: Effect of Sex on Satisfaction with Mass Transportation\n\n\n\n\n\n\n\n\n\nFigure 2: Effect of SES on Satisfaction with Mass Transportation\n\n\n\n\n\n\n\n\n\nFigure 3: Effect of Political Views on Satisfaction with Mass Transportation"
  },
  {
    "objectID": "posts/Lab_Ordinal_Regression/ord_lab_q.html",
    "href": "posts/Lab_Ordinal_Regression/ord_lab_q.html",
    "title": "Lab: Ordinal Regression",
    "section": "",
    "text": "If you are fitting a model, display the model output in a neatly formatted table. (The tidy and kable functions can help!)\nIf you are creating a plot, use clear labels for all axes, titles, etc.\nIf you are using Github, don’t forget to commit and push your work to to it regularly, at least after each exercise. Write short and informative commit messages. Else, if you are submitting on Canvas, make sure that the version you submit is the latest, and that it runs/knits without any errors.\nWhen you’re done, we should be able to knit the final version of the QMD in your GitHub as a HTML."
  },
  {
    "objectID": "posts/Lab_Ordinal_Regression/ord_lab_q.html#instructions",
    "href": "posts/Lab_Ordinal_Regression/ord_lab_q.html#instructions",
    "title": "Lab: Ordinal Regression",
    "section": "",
    "text": "If you are fitting a model, display the model output in a neatly formatted table. (The tidy and kable functions can help!)\nIf you are creating a plot, use clear labels for all axes, titles, etc.\nIf you are using Github, don’t forget to commit and push your work to to it regularly, at least after each exercise. Write short and informative commit messages. Else, if you are submitting on Canvas, make sure that the version you submit is the latest, and that it runs/knits without any errors.\nWhen you’re done, we should be able to knit the final version of the QMD in your GitHub as a HTML."
  },
  {
    "objectID": "posts/Lab_Ordinal_Regression/ord_lab_q.html#load-packages",
    "href": "posts/Lab_Ordinal_Regression/ord_lab_q.html#load-packages",
    "title": "Lab: Ordinal Regression",
    "section": "Load packages:",
    "text": "Load packages:\n\n\nCode\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(performance)\nlibrary(ordinal) #clm\nlibrary(car) # anova\nlibrary(ggeffects) #  viz\nlibrary(gofcat) # brant\nlibrary(brms)\nlibrary(emmeans) # contrasts\nlibrary(knitr)\nlibrary(effects)"
  },
  {
    "objectID": "posts/Lab_Ordinal_Regression/ord_lab_q.html#load-data",
    "href": "posts/Lab_Ordinal_Regression/ord_lab_q.html#load-data",
    "title": "Lab: Ordinal Regression",
    "section": "Load data",
    "text": "Load data\n\nMake sure only the top 3 ranks are being used. For some reason, there are missing ranks (my guess is they did not announce rank on TV)\n\n\n\nCode\ngbbo &lt;- read_csv(\"https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv\")\n\n# Enter code to filter. Think about the data type that would be relevant for Rank\ngb &lt;- gbbo %&gt;% filter(`Technical Rank` %in% c(1, 2, 3))"
  },
  {
    "objectID": "posts/Lab_Ordinal_Regression/ord_lab_q.html#explore",
    "href": "posts/Lab_Ordinal_Regression/ord_lab_q.html#explore",
    "title": "Lab: Ordinal Regression",
    "section": "Explore",
    "text": "Explore\n\nPlot two figures showing the percentage of bakers in each rank— create one for Gender and Age\n\n\n\nCode\n# Gender\ngb %&gt;%\n  group_by(Gender, `Technical Rank`) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  group_by(Gender) %&gt;%\n  mutate(percentage = count / sum(count) * 100) %&gt;%\n  ggplot(aes(x = factor(`Technical Rank`, levels = c(1,2,3)), y = percentage, fill = Gender)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"% of Bakers by Technical Rank and Gender\",\n       x = \"Technical Rank\",\n       y = \"%\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(min(gb$Age), max(gb$Age))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 17 66\n```\n\n\n:::\n:::\n\n\nCode\n# Plot percentage of bakers in each rank by Age group\ngb %&gt;%\n  mutate(AgeGroup = cut(Age, breaks = c(10, 20, 30, 40, 50, 60, 70), \n                         labels = c(\"10-20\", \"21-30\", \"31-40\", \"41-50\", \"51-60\", \"61-70\"))) %&gt;%\n  group_by(AgeGroup, `Technical Rank`) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  group_by(AgeGroup) %&gt;%\n  mutate(percentage = count / sum(count) * 100) %&gt;%\n  ggplot(aes(x = factor(`Technical Rank`, levels = c(1,2,3)), y = percentage, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"% of Bakers by Technical Rank and Age Group\",\n       x = \"Technical Rank\",\n       y = \"%\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/Lab_Ordinal_Regression/ord_lab_q.html#ordinal-analysis",
    "href": "posts/Lab_Ordinal_Regression/ord_lab_q.html#ordinal-analysis",
    "title": "Lab: Ordinal Regression",
    "section": "Ordinal Analysis",
    "text": "Ordinal Analysis\n\nIf you haven’t already, convert the outcome variable to an ordered factor. What does the order here represent?\n\n\nCode\ngb &lt;- gb %&gt;%\n  mutate(`Technical Rank` = factor(`Technical Rank`, levels = c(1, 2, 3), ordered = TRUE))\n\ngb &lt;- gb %&gt;%\n  rename(TechnicalRank = `Technical Rank`)\n\n\nConvert input variables to categorical factors as appropriate.\n\n\nCode\ngb &lt;- gb %&gt;%\n  mutate(Gender = factor(Gender))\n\ngb &lt;- gb %&gt;%\n  mutate(AgeGroup = cut(Age, breaks = c(10, 20, 30, 40, 50, 60, 70), \n                     labels = c(\"10-20\", \"21-30\", \"31-40\", \"41-50\", \"51-60\", \"61-70\")))\ngb &lt;- gb %&gt;%\n  mutate(AgeGroup = factor(AgeGroup, levels = c(\"10-20\", \"21-30\", \"31-40\", \"41-50\", \"51-60\", \"61-70\"), ordered = TRUE))\n\n\nRun a ordinal logistic regression model against all relevant input variables. Interpret the effects for Gender, Age and Gender*Age (even if they are non-significant).\n\n\nCode\n# Fit ordinal logistic regression model with interaction\nmodel &lt;- clm(`TechnicalRank` ~ Gender * AgeGroup, data = gb)\n\n# Summary of results\nsummary(model)\n\n\nformula: TechnicalRank ~ Gender * AgeGroup\ndata:    gb\n\n link  threshold nobs logLik  AIC    niter max.grad cond.H \n logit flexible  309  -336.25 698.51 3(0)  4.79e-08 1.5e+02\n\nCoefficients:\n                     Estimate Std. Error z value Pr(&gt;|z|)\nGenderM             0.4258889  0.2760282   1.543    0.123\nAgeGroup.L         -0.8131945  0.5175910  -1.571    0.116\nAgeGroup.Q         -0.0543235  0.4511328  -0.120    0.904\nAgeGroup.C          0.0235687  0.4870448   0.048    0.961\nAgeGroup^4          0.1525125  0.4653856   0.328    0.743\nAgeGroup^5         -0.0002774  0.3549649  -0.001    0.999\nGenderM:AgeGroup.L  1.2384302  0.7812882   1.585    0.113\nGenderM:AgeGroup.Q -0.1792456  0.6928953  -0.259    0.796\nGenderM:AgeGroup.C -0.6652193  0.7046513  -0.944    0.345\nGenderM:AgeGroup^4 -0.5504877  0.6569129  -0.838    0.402\nGenderM:AgeGroup^5 -0.2378061  0.5126122  -0.464    0.643\n\nThreshold coefficients:\n    Estimate Std. Error z value\n1|2  -0.4887     0.1945  -2.513\n2|3   0.9352     0.1999   4.678\n\n\nTest if the interaction is warranted\n\n#Hint: You need to create two models with clm(); one with interaction and one without. #Then you compare them using the anova test using anova()\n::: {.cell}\n\n```{.r .cell-code}\nmodel_no_int &lt;- clm(TechnicalRank ~ Gender + AgeGroup, data = gb)\nmodel_int &lt;- clm(TechnicalRank ~ Gender * AgeGroup, data = gb)\n\nanova(model_no_int, model_int)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLikelihood ratio tests of cumulative link models:\n \n             formula:                          link: threshold:\nmodel_no_int TechnicalRank ~ Gender + AgeGroup logit flexible  \nmodel_int    TechnicalRank ~ Gender * AgeGroup logit flexible  \n\n             no.par    AIC  logLik LR.stat df Pr(&gt;Chisq)\nmodel_no_int      8 692.73 -338.37                      \nmodel_int        13 698.51 -336.25  4.2215  5      0.518\n```\n\n\n:::\n:::\n\nUse ggemmeans to create a figure showing the interaction between Gender and Age as a function of rank. Plot predicted probabilities from the model.\n\n\nCode\n# Compute predicted probabilities\nem &lt;- ggemmeans(model, terms = c(\"AgeGroup\", \"Gender\"))\nem_df &lt;- as.data.frame(em)\n\n# Age Group\nggplot(em_df, aes(x = response.level, y = predicted, fill = x)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\ntitle = \"Effect of Age Group on Technical Rank\",\nx = \"Technical Rank\",\ny = \"Predicted Probability\",\nfill = \"Age Group\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Gender \nggplot(em_df, aes(x = response.level, y = predicted, fill = group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\ntitle = \"Effect of Gender on Technical Rank\",\nx = \"Technical Rank\",\ny = \"Predicted Probability\",\nfill = \"Gender\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nLatent Visualization\n\n\nCode\nsummary(gb)\n\n\n Gender       Age        TechnicalRank  AgeGroup \n F:173   Min.   :17.00   1:103         10-20:35  \n M:136   1st Qu.:27.00   2:104         21-30:95  \n         Median :31.00   3:102         31-40:94  \n         Mean   :34.54                 41-50:50  \n         3rd Qu.:41.00                 51-60:17  \n         Max.   :66.00                 61-70:18  \n\n\n\n\nCode\nols_clm = MASS::polr(TechnicalRank~Gender*Age, data=gb, Hess = TRUE)\n\nggeffect(ols_clm, c(\"Age[all]\", \"Gender\"), latent=TRUE) %&gt;% plot()\n\n\n\n\n\n\n\n\n\n\nUse the Brant test to support or reject the hypothesis that the proportional odds assumption holds for your simplified model.\n\n\nCode\nbrant.test(ols_clm)\n\n\n\nBrant Test:\n               chi-sq   df   pr(&gt;chi)\nOmnibus         1.295    3       0.73\nGenderM         0.585    1       0.44\nAge             0.065    1       0.80\nGenderM:Age     0.924    1       0.34\n\nH0: Proportional odds assumption holds\n\n\nbrms\nBelow is a model implementation using the brms package. We will just use the default priors for this. The exercise is to run this code and note your observations. What are salient differences you observe in how the model fitting takes place With respect to the results, how do you compare the results of the model you fit with clm and the one you fit with brms?\n\nIt is very similar as what we have from CLM.\n\n\nCode\n  ols2_brm = brm(TechnicalRank ~  Gender*Age, data=gb, family = cumulative, cores = 4,chains = 4)\n\n\n\nThe conditional_effects function is used to plot predicted probabilities by Gender and Age across each rank.\n::: {.cell}\n\nCode\nconditional_effects(ols2_brm, categorical = T)\n\n::: {.cell-output-display}  :::\n::: {.cell-output-display}  ::: :::\ncheck_predictions from the easystats performance package is used for examining model fit (i.e., does the data fit the model being used?). Run the below code. What do you think?\n\nIt is really good and capture to real data.\n\n\nCode\ncheck_predictions(ols2_brm)"
  },
  {
    "objectID": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html",
    "href": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html",
    "title": "Lab 4 - Multinomial Regression - Questions",
    "section": "",
    "text": "Lab Goal: Predict voting frequency using demographic variables Data source: FiveThirtyEight “Why Many Americans Don’t Vote” survey Method: Multinomial logistic regression"
  },
  {
    "objectID": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#data",
    "href": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#data",
    "title": "Lab 4 - Multinomial Regression - Questions",
    "section": "Data",
    "text": "Data\nThe data for this assignment comes from an online Ipsos survey that was conducted for the FiveThirtyEight article “Why Many Americans Don’t Vote”. You can read more about the survey design and respondents in the README of the GitHub repo for the data.\nRespondents were asked a variety of questions about their political beliefs, thoughts on multiple issues, and voting behavior. We will focus on using the demographic variables and someone’s party identification to understand whether a person is a probable voter.\nThe variables we’ll focus on were (definitions from the codebook in data set GitHub repo):\n\nppage: Age of respondent\neduc: Highest educational attainment category.\n\nrace: Race of respondent, census categories. Note: all categories except Hispanic were non-Hispanic.\ngender: Gender of respondent\nincome_cat: Household income category of respondent\nQ30: Response to the question “Generally speaking, do you think of yourself as a…”\n\n1: Republican\n2: Democrat\n3: Independent\n4: Another party, please specify\n5: No preference\n-1: No response\n\nvoter_category: past voting behavior:\n\nalways: respondent voted in all or all-but-one of the elections they were eligible in\nsporadic: respondent voted in at least two, but fewer than all-but-one of the elections they were eligible in\nrarely/never: respondent voted in 0 or 1 of the elections they were eligible in\n\n\nYou can read in the data directly from the GitHub repo:\n\n\nCode\nlibrary(nnet)\nlibrary(car)\nlibrary(tidyverse)\nlibrary(emmeans)\nlibrary(ggeffects)\nlibrary(knitr)\nlibrary(patchwork)\nlibrary(broom)\nlibrary(parameters)\nlibrary(easystats)\n\n\n\n\nCode\nvoter_data &lt;- read_csv(\"https://raw.githubusercontent.com/fivethirtyeight/data/master/non-voters/nonvoters_data.csv\")"
  },
  {
    "objectID": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#lrt",
    "href": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#lrt",
    "title": "Lab 4 - Multinomial Regression - Questions",
    "section": "LRT",
    "text": "LRT\n\nRun the full model and report overall significance of each of the terms\n\n\n\nCode\ncar::Anova(model2, type=\"II\") %&gt;%\n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\nLR Chisq\nDf\nPr(&gt;Chisq)\n\n\n\n\nage_centered\n638.297\n2\n0.000\n\n\nrace\n52.652\n6\n0.000\n\n\ngender\n6.028\n2\n0.049\n\n\nincome_cat\n67.721\n6\n0.000\n\n\neduc\n154.137\n4\n0.000\n\n\npol_ident_new\n153.844\n6\n0.000"
  },
  {
    "objectID": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#marginal-effects-political-group---emmeans",
    "href": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#marginal-effects-political-group---emmeans",
    "title": "Lab 4 - Multinomial Regression - Questions",
    "section": "Marginal Effects Political Group - Emmeans",
    "text": "Marginal Effects Political Group - Emmeans\n\n\nCode\n#Get estimated marginal means from the model\n\n#using \nmultinomial_analysis &lt;- emmeans(model2, ~ pol_ident_new|voter_category)\n\n\ncoefs = contrast(regrid(multinomial_analysis, \"log\"),\"trt.vs.ctrl1\",  by=\"pol_ident_new\")\n# you can add a parameter to the above command, ref = newbaseline, if you want to change baseline\n\nupdate(coefs, by = \"contrast\") %&gt;% \n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast\npol_ident_new\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nsporadic - (rarely/never)\nDem\n0.961\n0.070\n28\n13.722\n0.000\n\n\nalways - (rarely/never)\nDem\n0.480\n0.074\n28\n6.498\n0.000\n\n\nsporadic - (rarely/never)\nIndep\n0.591\n0.077\n28\n7.643\n0.000\n\n\nalways - (rarely/never)\nIndep\n-0.049\n0.084\n28\n-0.590\n0.900\n\n\nsporadic - (rarely/never)\nOther\n0.078\n0.087\n28\n0.902\n0.747\n\n\nalways - (rarely/never)\nOther\n-0.835\n0.110\n28\n-7.577\n0.000\n\n\nsporadic - (rarely/never)\nRep\n0.883\n0.084\n28\n10.469\n0.000\n\n\nalways - (rarely/never)\nRep\n0.327\n0.089\n28\n3.672\n0.004\n\n\n\n\n\nCode\n# Pairwise comparisons\ncontrast(coefs, \"revpairwise\", by = \"contrast\") %&gt;%\n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast1\ncontrast\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nIndep - Dem\nsporadic - (rarely/never)\n-0.370\n0.094\n28\n-3.933\n0.003\n\n\nOther - Dem\nsporadic - (rarely/never)\n-0.883\n0.103\n28\n-8.578\n0.000\n\n\nOther - Indep\nsporadic - (rarely/never)\n-0.513\n0.107\n28\n-4.807\n0.000\n\n\nRep - Dem\nsporadic - (rarely/never)\n-0.078\n0.099\n28\n-0.787\n0.860\n\n\nRep - Indep\nsporadic - (rarely/never)\n0.292\n0.099\n28\n2.965\n0.029\n\n\nRep - Other\nsporadic - (rarely/never)\n0.805\n0.109\n28\n7.404\n0.000\n\n\nIndep - Dem\nalways - (rarely/never)\n-0.529\n0.101\n28\n-5.255\n0.000\n\n\nOther - Dem\nalways - (rarely/never)\n-1.315\n0.125\n28\n-10.508\n0.000\n\n\nOther - Indep\nalways - (rarely/never)\n-0.786\n0.129\n28\n-6.072\n0.000\n\n\nRep - Dem\nalways - (rarely/never)\n-0.153\n0.104\n28\n-1.470\n0.468\n\n\nRep - Indep\nalways - (rarely/never)\n0.376\n0.104\n28\n3.605\n0.006\n\n\nRep - Other\nalways - (rarely/never)\n1.162\n0.130\n28\n8.969\n0.000"
  },
  {
    "objectID": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#marginal-effects-of-education---emmeans",
    "href": "posts/Lab_ Multinomial_Regression/Lab4_multinom_Questions-1.html#marginal-effects-of-education---emmeans",
    "title": "Lab 4 - Multinomial Regression - Questions",
    "section": "Marginal Effects of Education - Emmeans",
    "text": "Marginal Effects of Education - Emmeans\n\n\nCode\n#Get estimated marginal means from the model\n\n#using \nmultinomial_analysis &lt;- emmeans(model2, ~ educ|voter_category)\n\n\ncoefs = contrast(regrid(multinomial_analysis, \"log\"),\"trt.vs.ctrl1\",  by=\"educ\")\n# you can add a parameter to the above command, ref = newbaseline, if you want to change baseline\n\nupdate(coefs, by = \"contrast\") %&gt;% \n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast\neduc\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nsporadic - (rarely/never)\nCollege\n0.986\n0.076\n28\n12.904\n0.000\n\n\nalways - (rarely/never)\nCollege\n0.477\n0.080\n28\n5.960\n0.000\n\n\nsporadic - (rarely/never)\nHigh school or less\n0.187\n0.069\n28\n2.705\n0.031\n\n\nalways - (rarely/never)\nHigh school or less\n-0.711\n0.080\n28\n-8.883\n0.000\n\n\nsporadic - (rarely/never)\nSome college\n0.707\n0.074\n28\n9.512\n0.000\n\n\nalways - (rarely/never)\nSome college\n0.167\n0.079\n28\n2.114\n0.112\n\n\n\n\n\nCode\n# Pairwise comparisons\ncontrast(coefs, \"revpairwise\", by = \"contrast\") %&gt;%\n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast1\ncontrast\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nHigh school or less - College\nsporadic - (rarely/never)\n-0.799\n0.095\n28\n-8.416\n0.000\n\n\nSome college - College\nsporadic - (rarely/never)\n-0.278\n0.092\n28\n-3.030\n0.014\n\n\nSome college - High school or less\nsporadic - (rarely/never)\n0.520\n0.088\n28\n5.920\n0.000\n\n\nHigh school or less - College\nalways - (rarely/never)\n-1.188\n0.104\n28\n-11.394\n0.000\n\n\nSome college - College\nalways - (rarely/never)\n-0.310\n0.097\n28\n-3.207\n0.009\n\n\nSome college - High school or less\nalways - (rarely/never)\n0.878\n0.098\n28\n8.995\n0.000\n\n\n\n\n\n\nNext, plot the predicted probabilities of voter category as a function of Age and Party ID\n\n\n\nCode\nggemmeans(model2, terms = c(\"age_centered\")) %&gt;% \n  ggplot(aes(x = x, y = predicted, fill = response.level)) +\n  geom_area() + \n  geom_rug(sides = \"b\", position = \"jitter\", alpha = .5) + \n  labs(x = \"\\nAge_centered\", y = \"Predicted Probability\\n\", \n       title = \"Predicted Probabilities of Voting Frequency by Age\") +\n  scale_fill_manual(\n    name = NULL,\n    values = c(\"always\" = \"#F6B533\", \"sporadic\" = \"#D07EA2\", \"rarely/never\" = \"#9854F7\"),\n    labels = c(\"RARELY OR NEVER VOTE    \", \"SOMETIMES VOTE    \", \"ALMOST ALWAYS VOTE    \"),\n    breaks = c(\"rarely/never\", \"sporadic\", \"always\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nggemmeans(model2, terms = c(\"pol_ident_new\")) %&gt;% \n  ggplot(aes(x = x, y = predicted, fill = response.level)) +\n  geom_col(position = \"stack\") + \n  labs(x = \"\\nPolitical Identification\", y = \"Predicted Probability\\n\", \n       title = \"Predicted Probabilities of Voting Frequency by Political Identification\") +\n  scale_fill_manual(\n    name = NULL,\n    values = c(\"always\" = \"#F6B533\", \"sporadic\" = \"#D07EA2\", \"rarely/never\" = \"#9854F7\"),\n    labels = c(\"RARELY OR NEVER VOTE    \", \"SOMETIMES VOTE    \", \"ALMOST ALWAYS VOTE    \"),\n    breaks = c(\"rarely/never\", \"sporadic\", \"always\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nPlot predicted probabilities as a function of education and voting frequency.\n\n\nCode\nggemmeans(model2, terms = c(\"educ\")) %&gt;% \n  ggplot(aes(x = x, y = predicted, fill = response.level)) +\n  geom_col(position = \"stack\") + \n  labs(x = \"\\nEducation Level\", y = \"Predicted Probability\\n\", \n       title = \"Predicted Probabilities of Voting Frequency by Education Level\") +\n  scale_fill_manual(\n    name = NULL,\n    values = c(\"always\" = \"#F6B533\", \"sporadic\" = \"#D07EA2\", \"rarely/never\" = \"#9854F7\"),\n    labels = c(\"RARELY OR NEVER VOTE    \", \"SOMETIMES VOTE    \", \"ALMOST ALWAYS VOTE    \"),\n    breaks = c(\"rarely/never\", \"sporadic\", \"always\")\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n## Write-up\n\nDifferences between political groups and voting behavior - Emmeans\n\n\nCode\nmulti_an &lt;- emmeans(model2, ~ pol_ident_new|voter_category)\n\ncoefs = contrast(regrid(multi_an, \"log\"),\"trt.vs.ctrl1\",  by=\"pol_ident_new\")\n\nupdate(coefs, by = \"contrast\") %&gt;% \n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast\npol_ident_new\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nsporadic - (rarely/never)\nDem\n0.961\n0.070\n28\n13.722\n0.000\n\n\nalways - (rarely/never)\nDem\n0.480\n0.074\n28\n6.498\n0.000\n\n\nsporadic - (rarely/never)\nIndep\n0.591\n0.077\n28\n7.643\n0.000\n\n\nalways - (rarely/never)\nIndep\n-0.049\n0.084\n28\n-0.590\n0.900\n\n\nsporadic - (rarely/never)\nOther\n0.078\n0.087\n28\n0.902\n0.747\n\n\nalways - (rarely/never)\nOther\n-0.835\n0.110\n28\n-7.577\n0.000\n\n\nsporadic - (rarely/never)\nRep\n0.883\n0.084\n28\n10.469\n0.000\n\n\nalways - (rarely/never)\nRep\n0.327\n0.089\n28\n3.672\n0.004\n\n\n\n\n\nCode\n# get difference between yes-no and fair-excellent\ncontrast(coefs, \"revpairwise\", by = \"contrast\") %&gt;%\n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast1\ncontrast\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nIndep - Dem\nsporadic - (rarely/never)\n-0.370\n0.094\n28\n-3.933\n0.003\n\n\nOther - Dem\nsporadic - (rarely/never)\n-0.883\n0.103\n28\n-8.578\n0.000\n\n\nOther - Indep\nsporadic - (rarely/never)\n-0.513\n0.107\n28\n-4.807\n0.000\n\n\nRep - Dem\nsporadic - (rarely/never)\n-0.078\n0.099\n28\n-0.787\n0.860\n\n\nRep - Indep\nsporadic - (rarely/never)\n0.292\n0.099\n28\n2.965\n0.029\n\n\nRep - Other\nsporadic - (rarely/never)\n0.805\n0.109\n28\n7.404\n0.000\n\n\nIndep - Dem\nalways - (rarely/never)\n-0.529\n0.101\n28\n-5.255\n0.000\n\n\nOther - Dem\nalways - (rarely/never)\n-1.315\n0.125\n28\n-10.508\n0.000\n\n\nOther - Indep\nalways - (rarely/never)\n-0.786\n0.129\n28\n-6.072\n0.000\n\n\nRep - Dem\nalways - (rarely/never)\n-0.153\n0.104\n28\n-1.470\n0.468\n\n\nRep - Indep\nalways - (rarely/never)\n0.376\n0.104\n28\n3.605\n0.006\n\n\nRep - Other\nalways - (rarely/never)\n1.162\n0.130\n28\n8.969\n0.000\n\n\n\n\n\n\n\nDifferences between education level and voting behavior - Emmeans\nLast part of the assignment: Interpret the results from running the following code for your model\n\n\nCode\nmulti_an &lt;- emmeans(model2, ~ educ|voter_category)\n\ncoefs = contrast(regrid(multi_an, \"log\"),\"trt.vs.ctrl1\",  by=\"educ\")\n\nupdate(coefs, by = \"contrast\") %&gt;% \n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast\neduc\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nsporadic - (rarely/never)\nCollege\n0.986\n0.076\n28\n12.904\n0.000\n\n\nalways - (rarely/never)\nCollege\n0.477\n0.080\n28\n5.960\n0.000\n\n\nsporadic - (rarely/never)\nHigh school or less\n0.187\n0.069\n28\n2.705\n0.031\n\n\nalways - (rarely/never)\nHigh school or less\n-0.711\n0.080\n28\n-8.883\n0.000\n\n\nsporadic - (rarely/never)\nSome college\n0.707\n0.074\n28\n9.512\n0.000\n\n\nalways - (rarely/never)\nSome college\n0.167\n0.079\n28\n2.114\n0.112\n\n\n\n\n\nCode\n# get difference between yes-no and fair-excellent\ncontrast(coefs, \"revpairwise\", by = \"contrast\") %&gt;%\n  kable(format = \"markdown\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast1\ncontrast\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nHigh school or less - College\nsporadic - (rarely/never)\n-0.799\n0.095\n28\n-8.416\n0.000\n\n\nSome college - College\nsporadic - (rarely/never)\n-0.278\n0.092\n28\n-3.030\n0.014\n\n\nSome college - High school or less\nsporadic - (rarely/never)\n0.520\n0.088\n28\n5.920\n0.000\n\n\nHigh school or less - College\nalways - (rarely/never)\n-1.188\n0.104\n28\n-11.394\n0.000\n\n\nSome college - College\nalways - (rarely/never)\n-0.310\n0.097\n28\n-3.207\n0.009\n\n\nSome college - High school or less\nalways - (rarely/never)\n0.878\n0.098\n28\n8.995\n0.000\n\n\n\n\n\nEnter your interpretation here: For political party, dem and rep are more likely to vote more frequently than indp and other. Other seems to vote the least frequently overall. Higher education levels are associated with increased odds of being a more frequent voters."
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html",
    "title": "Lab 5 - Poisson - Questions",
    "section": "",
    "text": "To complete this lab:\nCode\nlibrary(MASS)\nlibrary(tidyverse)\nlibrary(emmeans)\nlibrary(ggeffects)\nlibrary(easystats)\nlibrary(performance)\nlibrary(knitr)\nCode\nlibrary(tidyverse)\n\ndata &lt;- read_delim(\"https://raw.githubusercontent.com/jgeller112/psy504-advanced-stats/main/slides/Poisson/data/2010.csv\")\nCode\nlibrary(naniar)\n\ndata_pos &lt;- data %&gt;%\n  dplyr::select(wwwhr, wordsum, age, sex, reliten, polviews, wrkhome) %&gt;%\nreplace_with_na(.,\n             replace = list(wwwhr = c(-1, 998, 999),\n                          wordsum = c(-1, 99),\n                          reliten = c(0, 8, 9), \n             polviews = c(0, 8, 9), \n             wrkhome = c(0,8,9), \n             age=c(0, 98, 99)))\nQ: Can you explain what might be going on in the above code?\nA: It is replacing certain values within the specified column with NA to indicate missing/invalid data. It also first filter out columns that we don’t need for further analysis.\nQ: The next step in data cleaning would be to ensure that the data in your code are aligned with the description/ usage context of the variables\nCode\ndata_pos &lt;- data_pos %&gt;%\n  mutate(sex = factor(sex, levels = c(-1, 1)),\n         reliten = factor(reliten, levels = c(1, 2, 3, 4)))"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#missingness",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#missingness",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Missingness",
    "text": "Missingness\n\n\nCode\nlibrary(skimr)\nskimr::skim(data_pos)\n\n\n\n\n\n\nName\ndata_pos\n\n\nNumber of rows\n2044\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nData summaryVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nsex\n0\n1.00\nFALSE\n2\n-1: 1153, 1: 891\n\n\nreliten\n99\n0.95\nFALSE\n4\n2: 747, 1: 707, 4: 363, 3: 128\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nwwwhr\n996\n0.51\n9.79\n13.41\n0\n2\n5\n14\n168\n▇▁▁▁▁\n\n\nwordsum\n657\n0.68\n6.03\n2.07\n0\n5\n6\n7\n10\n▁▃▇▅▂\n\n\nage\n3\n1.00\n47.97\n17.68\n18\n33\n47\n61\n89\n▇▇▇▅▃\n\n\npolviews\n71\n0.97\n4.08\n1.46\n1\n3\n4\n5\n7\n▃▂▇▃▅\n\n\nwrkhome\n882\n0.57\n2.26\n1.72\n1\n1\n1\n4\n6\n▇▁▁▂▁"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#fit-a-poisson-model-to-the-data.",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#fit-a-poisson-model-to-the-data.",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Fit a Poisson model to the data.",
    "text": "Fit a Poisson model to the data.\n\n\nCode\nmodel &lt;- glm(wwwhr ~ wordsum + age + sex + reliten + polviews + wrkhome, \n                     data = data_pos, family = poisson(link = \"log\"))\n\nsummary(model)\n\n\n\nCall:\nglm(formula = wwwhr ~ wordsum + age + sex + reliten + polviews + \n    wrkhome, family = poisson(link = \"log\"), data = data_pos)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  1.754427   0.080100  21.903  &lt; 2e-16 ***\nwordsum      0.101883   0.007805  13.053  &lt; 2e-16 ***\nage         -0.016611   0.001087 -15.280  &lt; 2e-16 ***\nsex1         0.250233   0.026567   9.419  &lt; 2e-16 ***\nreliten2     0.343367   0.037223   9.225  &lt; 2e-16 ***\nreliten3     0.409478   0.063447   6.454 1.09e-10 ***\nreliten4     0.659817   0.039307  16.786  &lt; 2e-16 ***\npolviews    -0.032646   0.009768  -3.342 0.000831 ***\nwrkhome      0.078655   0.007661  10.267  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 7666.1  on 602  degrees of freedom\nResidual deviance: 6463.6  on 594  degrees of freedom\n  (1441 observations deleted due to missingness)\nAIC: 8525.9\n\nNumber of Fisher Scoring iterations: 5"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#carry-out-model-checking",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#carry-out-model-checking",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Carry out model checking",
    "text": "Carry out model checking\nHint: performance package has the function you’re looking for\n\n\nCode\nperformance::check_overdispersion(model)\n\n\n# Overdispersion test\n\n       dispersion ratio =   14.654\n  Pearson's Chi-Squared = 8704.487\n                p-value =  &lt; 0.001"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#find-any-outliers",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#find-any-outliers",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Find any outliers",
    "text": "Find any outliers\n\n\nCode\noutliers &lt;- performance::check_outliers(model)\ndata_pos_clean &lt;- data_pos[-outliers, ]"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#refit-the-model-after-excludint-outliers",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#refit-the-model-after-excludint-outliers",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Refit the model after excludint outliers",
    "text": "Refit the model after excludint outliers\n\n\nCode\nmodel2 &lt;- glm(wwwhr ~ wordsum + age + sex + reliten + polviews + wrkhome, \n                           data = data_pos_clean, family = poisson(link = \"log\"))\n\nsummary(model2)\n\n\n\nCall:\nglm(formula = wwwhr ~ wordsum + age + sex + reliten + polviews + \n    wrkhome, family = poisson(link = \"log\"), data = data_pos_clean)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  1.767293   0.080239  22.025  &lt; 2e-16 ***\nwordsum      0.101780   0.007801  13.047  &lt; 2e-16 ***\nage         -0.016693   0.001087 -15.353  &lt; 2e-16 ***\nsex1         0.252977   0.026584   9.516  &lt; 2e-16 ***\nreliten2     0.336660   0.037290   9.028  &lt; 2e-16 ***\nreliten3     0.403315   0.063473   6.354  2.1e-10 ***\nreliten4     0.652067   0.039412  16.545  &lt; 2e-16 ***\npolviews    -0.033709   0.009774  -3.449 0.000563 ***\nwrkhome      0.078938   0.007657  10.309  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 7659.5  on 601  degrees of freedom\nResidual deviance: 6457.6  on 593  degrees of freedom\n  (1441 observations deleted due to missingness)\nAIC: 8516.9\n\nNumber of Fisher Scoring iterations: 5\n\n\n\n\nCode\nmodel_parameters(model2) %&gt;%\n  print_html()\n\n\n\n\n\n\n\n\nParameter\nCoefficient\nSE\n95% CI\nz\np\n\n\n\n\n(Intercept)\n1.77\n0.08\n(1.61, 1.92)\n22.03\n&lt; .001\n\n\nwordsum\n0.10\n7.80e-03\n(0.09, 0.12)\n13.05\n&lt; .001\n\n\nage\n-0.02\n1.09e-03\n(-0.02, -0.01)\n-15.35\n&lt; .001\n\n\nsex (1)\n0.25\n0.03\n(0.20, 0.31)\n9.52\n&lt; .001\n\n\nreliten (2)\n0.34\n0.04\n(0.26, 0.41)\n9.03\n&lt; .001\n\n\nreliten (3)\n0.40\n0.06\n(0.28, 0.53)\n6.35\n&lt; .001\n\n\nreliten (4)\n0.65\n0.04\n(0.58, 0.73)\n16.55\n&lt; .001\n\n\npolviews\n-0.03\n9.77e-03\n(-0.05, -0.01)\n-3.45\n&lt; .001\n\n\nwrkhome\n0.08\n7.66e-03\n(0.06, 0.09)\n10.31\n&lt; .001\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck for Overdispersion\nHint: performance package has the function you’re looking for\n\n\nCode\nperformance::check_overdispersion(model2)\n\n\n# Overdispersion test\n\n       dispersion ratio =   14.654\n  Pearson's Chi-Squared = 8689.701\n                p-value =  &lt; 0.001\n\n\nWhat do you notice? And what’s a good next step forward? Can there be another model class that can fit the data? If so, fit this model to the data.\n\n\nCode\n# it is still not a good fit after excluding the outliers, next step -&gt; negative binomial\nnb_model &lt;- glm.nb(wwwhr ~ wordsum + age + sex + reliten + polviews + wrkhome, \n                   data = data_pos_clean)\n\nsummary(nb_model)\n\n\n\nCall:\nglm.nb(formula = wwwhr ~ wordsum + age + sex + reliten + polviews + \n    wrkhome, data = data_pos_clean, init.theta = 0.9663571073, \n    link = log)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  1.824523   0.258989   7.045 1.86e-12 ***\nwordsum      0.107128   0.025981   4.123 3.73e-05 ***\nage         -0.016239   0.003528  -4.603 4.16e-06 ***\nsex1         0.163860   0.089710   1.827  0.06777 .  \nreliten2     0.310860   0.109539   2.838  0.00454 ** \nreliten3     0.360300   0.207253   1.738  0.08213 .  \nreliten4     0.638718   0.128299   4.978 6.41e-07 ***\npolviews    -0.033156   0.033246  -0.997  0.31863    \nwrkhome      0.056940   0.026989   2.110  0.03488 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(0.9664) family taken to be 1)\n\n    Null deviance: 770.55  on 601  degrees of freedom\nResidual deviance: 670.42  on 593  degrees of freedom\n  (1441 observations deleted due to missingness)\nAIC: 3938.6\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  0.9664 \n          Std. Err.:  0.0597 \n\n 2 x log-likelihood:  -3918.5570"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#which-one-is-better--your-earlier-model-or-later-model",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#which-one-is-better--your-earlier-model-or-later-model",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Which one is better- your earlier model, or later model?",
    "text": "Which one is better- your earlier model, or later model?\nnegative binomial is significantly better\n\n\nCode\ntest_likelihoodratio(model2, nb_model) %&gt;%\n  kable()\n\n\n\n\n\n\nName\nModel\ndf\ndf_diff\nChi2\np\n\n\n\n\nmodel2\nmodel2\nglm\n9\nNA\nNA\nNA\n\n\nnb_model\nnb_model\nnegbin\n10\n1\n4580.367\n0"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#what-is-zero-inflation-is-there-zero-inflation-in-your-chosen-model",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#what-is-zero-inflation-is-there-zero-inflation-in-your-chosen-model",
    "title": "Lab 5 - Poisson - Questions",
    "section": "What is zero inflation? Is there zero-inflation in your chosen model?",
    "text": "What is zero inflation? Is there zero-inflation in your chosen model?\nzero inflation -&gt; too many zeros can bias results. Yes, there is zero-inflation in the model. Observed zeros &lt; predicted\n\n\nCode\nperformance::check_zeroinflation(nb_model)\n\n\n# Check for zero-inflation\n\n   Observed zeros: 40\n  Predicted zeros: 67\n            Ratio: 1.67\n\n\n\n\nCode\nlibrary(pscl)\nzif_model &lt;- zeroinfl(wwwhr ~ wordsum + age + sex + reliten + polviews + wrkhome | 1, \n                       data = data_pos_clean, dist = \"negbin\")\n\nsummary(zif_model)\n\n\n\nCall:\nzeroinfl(formula = wwwhr ~ wordsum + age + sex + reliten + polviews + \n    wrkhome | 1, data = data_pos_clean, dist = \"negbin\")\n\nPearson residuals:\n    Min      1Q  Median      3Q     Max \n-0.9568 -0.7130 -0.3937  0.2668  7.6559 \n\nCount model coefficients (negbin with log link):\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  1.824512   0.263285   6.930 4.21e-12 ***\nwordsum      0.107133   0.027367   3.915 9.05e-05 ***\nage         -0.016239   0.003633  -4.470 7.84e-06 ***\nsex1         0.163843   0.090917   1.802  0.07153 .  \nreliten2     0.310846   0.109528   2.838  0.00454 ** \nreliten3     0.360270   0.207851   1.733  0.08304 .  \nreliten4     0.638695   0.127404   5.013 5.35e-07 ***\npolviews    -0.033156   0.032774  -1.012  0.31170    \nwrkhome      0.056942   0.027562   2.066  0.03883 *  \nLog(theta)  -0.034211   0.061746  -0.554  0.57954    \n\nZero-inflation model coefficients (binomial with logit link):\n            Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept)    -12.2       26.9  -0.454     0.65\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n\nTheta = 0.9664 \nNumber of iterations in BFGS optimization: 24 \nLog-likelihood: -1959 on 11 Df\n\n\n\nLog LambdaMean Count\n\n\n\n\nCode\nlog_lambda &lt;- predict(model2, type = \"link\")  # Get predicted log(lambda)\nlog_lambda_df &lt;- data.frame(Log_Lambda = log_lambda)\n\nhead(log_lambda_df)\n\n\n   Log_Lambda\n1    3.199785\n10   2.208683\n19   2.361181\n20   2.060068\n24   2.739818\n27   3.064426\n\n\n\n\n\n\nCode\nmean_count &lt;- predict(model2, type = \"response\")  # Get predicted mean counts\nmean_count_df &lt;- data.frame(Mean_Count = mean_count)\nhead(mean_count_df)\n\n\n   Mean_Count\n1   24.527263\n10   9.103718\n19  10.603469\n20   7.846504\n24  15.484166\n27  21.422162"
  },
  {
    "objectID": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#report-your-conclusions",
    "href": "posts/Lab_Poisson_Regression/poisson_lab_questions-1.html#report-your-conclusions",
    "title": "Lab 5 - Poisson - Questions",
    "section": "Report your conclusions",
    "text": "Report your conclusions\nThe negative binomial regression model is the best fit for this data set since it handles overdispersion better than the Poisson one. The model essentially shows us that people with higher vocab scores and those who work from home more often are associated with spending more time on the Internet. Older folks with stronger religiosity spend less time on the Internet. Both sex and political orientation show no significant effect. However, the negative binomial model still has zero inflation issue, so the zero-inflated negative binomial model may be the best one."
  }
]